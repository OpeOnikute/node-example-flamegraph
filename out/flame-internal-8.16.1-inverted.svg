<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="278" onload="init(evt)" viewBox="0 0 1200 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (1 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="278.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Icicle Graph</text>
<text id="details" x="10.00" y="261" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="261" > </text>
<g id="frames">
<g >
<title>compare native intl.js:619 (2 samples, 0.41%)</title><rect x="829.5" y="68" width="4.8" height="15.0" fill="rgb(232,90,10)" rx="2" ry="2" />
<text  x="832.51" y="78.5" ></text>
</g>
<g >
<title>node (17 samples, 3.46%)</title><rect x="776.6" y="84" width="40.9" height="15.0" fill="rgb(243,157,40)" rx="2" ry="2" />
<text  x="779.64" y="94.5" >node</text>
</g>
<g >
<title>compare native intl.js:619 (1 samples, 0.20%)</title><rect x="822.3" y="68" width="2.4" height="15.0" fill="rgb(215,182,42)" rx="2" ry="2" />
<text  x="825.30" y="78.5" ></text>
</g>
<g >
<title>v8::IsolateNewImpl (3 samples, 0.61%)</title><rect x="1182.8" y="132" width="7.2" height="15.0" fill="rgb(221,148,0)" rx="2" ry="2" />
<text  x="1185.79" y="142.5" ></text>
</g>
<g >
<title>v8::base::CallOnceImpl (1 samples, 0.20%)</title><rect x="185.4" y="100" width="2.4" height="15.0" fill="rgb(221,212,35)" rx="2" ry="2" />
<text  x="188.44" y="110.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="836.7" y="116" width="4.8" height="15.0" fill="rgb(244,15,28)" rx="2" ry="2" />
<text  x="839.72" y="126.5" ></text>
</g>
<g >
<title>BytecodeHandler:LdaConstant (1 samples, 0.20%)</title><rect x="84.5" y="52" width="2.4" height="15.0" fill="rgb(237,14,29)" rx="2" ry="2" />
<text  x="87.50" y="62.5" ></text>
</g>
<g >
<title>node::Utf8Value::Utf8Value (1 samples, 0.20%)</title><rect x="817.5" y="68" width="2.4" height="15.0" fill="rgb(224,2,39)" rx="2" ry="2" />
<text  x="820.49" y="78.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.20%)</title><rect x="865.6" y="116" width="2.4" height="15.0" fill="rgb(207,33,48)" rx="2" ry="2" />
<text  x="868.56" y="126.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="163.8" y="68" width="2.4" height="15.0" fill="rgb(218,76,37)" rx="2" ry="2" />
<text  x="166.81" y="78.5" ></text>
</g>
<g >
<title>ERR_load_ASN1_strings (1 samples, 0.20%)</title><rect x="264.7" y="100" width="2.4" height="15.0" fill="rgb(241,43,17)" rx="2" ry="2" />
<text  x="267.75" y="110.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="846.3" y="100" width="2.4" height="15.0" fill="rgb(254,187,42)" rx="2" ry="2" />
<text  x="849.33" y="110.5" ></text>
</g>
<g >
<title>BytecodeHandler:Construct (1 samples, 0.20%)</title><rect x="132.6" y="68" width="2.4" height="15.0" fill="rgb(247,71,53)" rx="2" ry="2" />
<text  x="135.57" y="78.5" ></text>
</g>
<g >
<title>icu_60::RuleBasedCollator::doCompare (1 samples, 0.20%)</title><rect x="252.7" y="52" width="2.4" height="15.0" fill="rgb(238,6,54)" rx="2" ry="2" />
<text  x="255.73" y="62.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.20%)</title><rect x="322.4" y="116" width="2.4" height="15.0" fill="rgb(247,112,32)" rx="2" ry="2" />
<text  x="325.42" y="126.5" ></text>
</g>
<g >
<title>node (3 samples, 0.61%)</title><rect x="1182.8" y="196" width="7.2" height="15.0" fill="rgb(242,92,45)" rx="2" ry="2" />
<text  x="1185.79" y="206.5" ></text>
</g>
<g >
<title>node::crypto::InitCrypto (1 samples, 0.20%)</title><rect x="264.7" y="196" width="2.4" height="15.0" fill="rgb(228,212,8)" rx="2" ry="2" />
<text  x="267.75" y="206.5" ></text>
</g>
<g >
<title>node::Binding (1 samples, 0.20%)</title><rect x="870.4" y="84" width="2.4" height="15.0" fill="rgb(245,108,45)" rx="2" ry="2" />
<text  x="873.37" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="74.9" y="68" width="2.4" height="15.0" fill="rgb(247,103,34)" rx="2" ry="2" />
<text  x="77.89" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="132.6" y="84" width="2.4" height="15.0" fill="rgb(238,184,35)" rx="2" ry="2" />
<text  x="135.57" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="252.7" y="84" width="2.4" height="15.0" fill="rgb(238,104,49)" rx="2" ry="2" />
<text  x="255.73" y="94.5" ></text>
</g>
<g >
<title>_IO_file_overflow (1 samples, 0.20%)</title><rect x="187.8" y="52" width="2.4" height="15.0" fill="rgb(244,43,33)" rx="2" ry="2" />
<text  x="190.84" y="62.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (2 samples, 0.41%)</title><rect x="288.8" y="84" width="4.8" height="15.0" fill="rgb(233,17,42)" rx="2" ry="2" />
<text  x="291.78" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="34.0" y="68" width="2.4" height="15.0" fill="rgb(210,110,4)" rx="2" ry="2" />
<text  x="37.03" y="78.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.20%)</title><rect x="185.4" y="148" width="2.4" height="15.0" fill="rgb(239,54,46)" rx="2" ry="2" />
<text  x="188.44" y="158.5" ></text>
</g>
<g >
<title>icu_60::UnicodeString::UnicodeString (4 samples, 0.81%)</title><rect x="255.1" y="52" width="9.6" height="15.0" fill="rgb(233,33,17)" rx="2" ry="2" />
<text  x="258.13" y="62.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (1 samples, 0.20%)</title><rect x="834.3" y="84" width="2.4" height="15.0" fill="rgb(237,10,21)" rx="2" ry="2" />
<text  x="837.32" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="843.9" y="68" width="2.4" height="15.0" fill="rgb(226,138,15)" rx="2" ry="2" />
<text  x="846.93" y="78.5" ></text>
</g>
<g >
<title>v8::V8::Initialize (1 samples, 0.20%)</title><rect x="185.4" y="116" width="2.4" height="15.0" fill="rgb(212,212,25)" rx="2" ry="2" />
<text  x="188.44" y="126.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.20%)</title><rect x="264.7" y="164" width="2.4" height="15.0" fill="rgb(239,38,47)" rx="2" ry="2" />
<text  x="267.75" y="174.5" ></text>
</g>
<g >
<title>compare native intl.js:619 (1 samples, 0.20%)</title><rect x="252.7" y="68" width="2.4" height="15.0" fill="rgb(236,199,51)" rx="2" ry="2" />
<text  x="255.73" y="78.5" ></text>
</g>
<g >
<title>_IO_do_write (4 samples, 0.81%)</title><rect x="1180.4" y="68" width="9.6" height="15.0" fill="rgb(224,99,2)" rx="2" ry="2" />
<text  x="1183.39" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="320.0" y="100" width="2.4" height="15.0" fill="rgb(213,222,8)" rx="2" ry="2" />
<text  x="323.02" y="110.5" ></text>
</g>
<g >
<title>compare native intl.js:619 (1 samples, 0.20%)</title><rect x="824.7" y="68" width="2.4" height="15.0" fill="rgb(240,226,27)" rx="2" ry="2" />
<text  x="827.70" y="78.5" ></text>
</g>
<g >
<title>lh_insert (1 samples, 0.20%)</title><rect x="175.8" y="68" width="2.4" height="15.0" fill="rgb(218,205,23)" rx="2" ry="2" />
<text  x="178.82" y="78.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::RunInThisContext (1 samples, 0.20%)</title><rect x="1168.4" y="84" width="2.4" height="15.0" fill="rgb(221,178,33)" rx="2" ry="2" />
<text  x="1171.37" y="94.5" ></text>
</g>
<g >
<title>node (185 samples, 37.68%)</title><rect x="327.2" y="52" width="444.6" height="15.0" fill="rgb(221,120,49)" rx="2" ry="2" />
<text  x="330.23" y="62.5" >node</text>
</g>
<g >
<title>v8::Object::DefineOwnProperty (2 samples, 0.41%)</title><rect x="868.0" y="52" width="4.8" height="15.0" fill="rgb(224,125,13)" rx="2" ry="2" />
<text  x="870.96" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:LdaKeyedProperty (5 samples, 1.02%)</title><rect x="91.7" y="52" width="12.0" height="15.0" fill="rgb(210,40,40)" rx="2" ry="2" />
<text  x="94.71" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="822.3" y="84" width="2.4" height="15.0" fill="rgb(252,89,37)" rx="2" ry="2" />
<text  x="825.30" y="94.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="829.5" y="84" width="4.8" height="15.0" fill="rgb(218,11,43)" rx="2" ry="2" />
<text  x="832.51" y="94.5" ></text>
</g>
<g >
<title>node::Start (1 samples, 0.20%)</title><rect x="185.4" y="132" width="2.4" height="15.0" fill="rgb(248,58,7)" rx="2" ry="2" />
<text  x="188.44" y="142.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="10.0" y="68" width="2.4" height="15.0" fill="rgb(221,66,50)" rx="2" ry="2" />
<text  x="13.00" y="78.5" ></text>
</g>
<g >
<title>node (12 samples, 2.44%)</title><rect x="103.7" y="68" width="28.9" height="15.0" fill="rgb(232,227,5)" rx="2" ry="2" />
<text  x="106.73" y="78.5" >node</text>
</g>
<g >
<title>operator new (5 samples, 1.02%)</title><rect x="276.8" y="68" width="12.0" height="15.0" fill="rgb(226,121,27)" rx="2" ry="2" />
<text  x="279.76" y="78.5" ></text>
</g>
<g >
<title>node::InternalModuleReadFile (1 samples, 0.20%)</title><rect x="195.1" y="100" width="2.4" height="15.0" fill="rgb(247,19,1)" rx="2" ry="2" />
<text  x="198.05" y="110.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (5 samples, 1.02%)</title><rect x="300.8" y="100" width="12.0" height="15.0" fill="rgb(215,30,22)" rx="2" ry="2" />
<text  x="303.79" y="110.5" ></text>
</g>
<g >
<title>compare native intl.js:619 (3 samples, 0.61%)</title><rect x="245.5" y="84" width="7.2" height="15.0" fill="rgb(238,171,10)" rx="2" ry="2" />
<text  x="248.52" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="774.2" y="84" width="2.4" height="15.0" fill="rgb(209,184,34)" rx="2" ry="2" />
<text  x="777.24" y="94.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (1 samples, 0.20%)</title><rect x="187.8" y="68" width="2.4" height="15.0" fill="rgb(239,106,35)" rx="2" ry="2" />
<text  x="190.84" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="875.2" y="84" width="2.4" height="15.0" fill="rgb(216,134,0)" rx="2" ry="2" />
<text  x="878.17" y="94.5" ></text>
</g>
<g >
<title>node::Binding (2 samples, 0.41%)</title><rect x="882.4" y="100" width="4.8" height="15.0" fill="rgb(220,137,53)" rx="2" ry="2" />
<text  x="885.38" y="110.5" ></text>
</g>
<g >
<title>start_thread (17 samples, 3.46%)</title><rect x="776.6" y="68" width="40.9" height="15.0" fill="rgb(208,53,41)" rx="2" ry="2" />
<text  x="779.64" y="78.5" >sta..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (1 samples, 0.20%)</title><rect x="841.5" y="52" width="2.4" height="15.0" fill="rgb(229,117,38)" rx="2" ry="2" />
<text  x="844.53" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="824.7" y="84" width="2.4" height="15.0" fill="rgb(237,208,12)" rx="2" ry="2" />
<text  x="827.70" y="94.5" ></text>
</g>
<g >
<title>node::Start (1 samples, 0.20%)</title><rect x="187.8" y="116" width="2.4" height="15.0" fill="rgb(242,88,8)" rx="2" ry="2" />
<text  x="190.84" y="126.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (2 samples, 0.41%)</title><rect x="288.8" y="68" width="4.8" height="15.0" fill="rgb(220,137,22)" rx="2" ry="2" />
<text  x="291.78" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="168.6" y="68" width="2.4" height="15.0" fill="rgb(208,42,23)" rx="2" ry="2" />
<text  x="171.62" y="78.5" ></text>
</g>
<g >
<title>Handler:An IC handler from the snapshot (2 samples, 0.41%)</title><rect x="178.2" y="52" width="4.8" height="15.0" fill="rgb(232,190,25)" rx="2" ry="2" />
<text  x="181.23" y="62.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (2 samples, 0.41%)</title><rect x="836.7" y="68" width="4.8" height="15.0" fill="rgb(207,183,46)" rx="2" ry="2" />
<text  x="839.72" y="78.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (5 samples, 1.02%)</title><rect x="300.8" y="68" width="12.0" height="15.0" fill="rgb(230,75,23)" rx="2" ry="2" />
<text  x="303.79" y="78.5" ></text>
</g>
<g >
<title>node (7 samples, 1.43%)</title><rect x="144.6" y="68" width="16.8" height="15.0" fill="rgb(205,122,4)" rx="2" ry="2" />
<text  x="147.58" y="78.5" ></text>
</g>
<g >
<title>lh_insert (1 samples, 0.20%)</title><rect x="264.7" y="52" width="2.4" height="15.0" fill="rgb(224,52,31)" rx="2" ry="2" />
<text  x="267.75" y="62.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (1 samples, 0.20%)</title><rect x="872.8" y="68" width="2.4" height="15.0" fill="rgb(229,160,28)" rx="2" ry="2" />
<text  x="875.77" y="78.5" ></text>
</g>
<g >
<title>icu_60::RuleBasedCollator::doCompare (3 samples, 0.61%)</title><rect x="245.5" y="68" width="7.2" height="15.0" fill="rgb(254,62,2)" rx="2" ry="2" />
<text  x="248.52" y="78.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::RunInThisContext (1 samples, 0.20%)</title><rect x="875.2" y="68" width="2.4" height="15.0" fill="rgb(247,6,34)" rx="2" ry="2" />
<text  x="878.17" y="78.5" ></text>
</g>
<g >
<title>node (3 samples, 0.61%)</title><rect x="267.1" y="68" width="7.3" height="15.0" fill="rgb(209,6,15)" rx="2" ry="2" />
<text  x="270.15" y="78.5" ></text>
</g>
<g >
<title>v8::NewContext (1 samples, 0.20%)</title><rect x="865.6" y="52" width="2.4" height="15.0" fill="rgb(248,209,5)" rx="2" ry="2" />
<text  x="868.56" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:Ldar (1 samples, 0.20%)</title><rect x="132.6" y="52" width="2.4" height="15.0" fill="rgb(246,4,15)" rx="2" ry="2" />
<text  x="135.57" y="62.5" ></text>
</g>
<g >
<title>uloc_forLanguageTag_60 (1 samples, 0.20%)</title><rect x="846.3" y="68" width="2.4" height="15.0" fill="rgb(226,97,18)" rx="2" ry="2" />
<text  x="849.33" y="78.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.20%)</title><rect x="185.4" y="68" width="2.4" height="15.0" fill="rgb(208,206,23)" rx="2" ry="2" />
<text  x="188.44" y="78.5" ></text>
</g>
<g >
<title>vfprintf (4 samples, 0.81%)</title><rect x="1180.4" y="100" width="9.6" height="15.0" fill="rgb(215,10,40)" rx="2" ry="2" />
<text  x="1183.39" y="110.5" ></text>
</g>
<g >
<title>BytecodeHandler:AddSmi (1 samples, 0.20%)</title><rect x="24.4" y="52" width="2.4" height="15.0" fill="rgb(250,173,37)" rx="2" ry="2" />
<text  x="27.42" y="62.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="137.4" y="68" width="4.8" height="15.0" fill="rgb(249,30,1)" rx="2" ry="2" />
<text  x="140.37" y="78.5" ></text>
</g>
<g >
<title>uv__fs_work (1 samples, 0.20%)</title><rect x="195.1" y="68" width="2.4" height="15.0" fill="rgb(226,103,49)" rx="2" ry="2" />
<text  x="198.05" y="78.5" ></text>
</g>
<g >
<title>BytecodeHandler:StaKeyedPropertyStrict (7 samples, 1.43%)</title><rect x="144.6" y="52" width="16.8" height="15.0" fill="rgb(217,132,41)" rx="2" ry="2" />
<text  x="147.58" y="62.5" ></text>
</g>
<g >
<title>node (3 samples, 0.61%)</title><rect x="279.2" y="100" width="7.2" height="15.0" fill="rgb(241,161,4)" rx="2" ry="2" />
<text  x="282.16" y="110.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="190.2" y="84" width="4.9" height="15.0" fill="rgb(240,135,25)" rx="2" ry="2" />
<text  x="193.24" y="94.5" ></text>
</g>
<g >
<title>v8::IsolateNewImpl (5 samples, 1.02%)</title><rect x="853.5" y="52" width="12.1" height="15.0" fill="rgb(220,223,0)" rx="2" ry="2" />
<text  x="856.54" y="62.5" ></text>
</g>
<g >
<title>v8::FunctionTemplate::GetFunction (1 samples, 0.20%)</title><rect x="851.1" y="52" width="2.4" height="15.0" fill="rgb(234,186,30)" rx="2" ry="2" />
<text  x="854.14" y="62.5" ></text>
</g>
<g >
<title>node (3 samples, 0.61%)</title><rect x="26.8" y="68" width="7.2" height="15.0" fill="rgb(234,142,22)" rx="2" ry="2" />
<text  x="29.82" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="142.2" y="68" width="2.4" height="15.0" fill="rgb(226,46,26)" rx="2" ry="2" />
<text  x="145.18" y="78.5" ></text>
</g>
<g >
<title>node (8 samples, 1.63%)</title><rect x="226.3" y="68" width="19.2" height="15.0" fill="rgb(228,185,52)" rx="2" ry="2" />
<text  x="229.29" y="78.5" ></text>
</g>
<g >
<title>SSL_load_error_strings (1 samples, 0.20%)</title><rect x="264.7" y="132" width="2.4" height="15.0" fill="rgb(237,55,54)" rx="2" ry="2" />
<text  x="267.75" y="142.5" ></text>
</g>
<g >
<title>node::InternalModuleStat (1 samples, 0.20%)</title><rect x="817.5" y="84" width="2.4" height="15.0" fill="rgb(239,176,39)" rx="2" ry="2" />
<text  x="820.49" y="94.5" ></text>
</g>
<g >
<title>node::UDPWrap::Initialize (1 samples, 0.20%)</title><rect x="851.1" y="84" width="2.4" height="15.0" fill="rgb(250,62,23)" rx="2" ry="2" />
<text  x="854.14" y="94.5" ></text>
</g>
<g >
<title>BytecodeHandler:LdaGlobal (1 samples, 0.20%)</title><rect x="89.3" y="52" width="2.4" height="15.0" fill="rgb(232,31,46)" rx="2" ry="2" />
<text  x="92.31" y="62.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="288.8" y="116" width="4.8" height="15.0" fill="rgb(233,135,32)" rx="2" ry="2" />
<text  x="291.78" y="126.5" ></text>
</g>
<g >
<title>node::BackgroundRunner (1 samples, 0.20%)</title><rect x="274.4" y="68" width="2.4" height="15.0" fill="rgb(207,154,39)" rx="2" ry="2" />
<text  x="277.36" y="78.5" ></text>
</g>
<g >
<title>uprv_malloc_60 (1 samples, 0.20%)</title><rect x="846.3" y="52" width="2.4" height="15.0" fill="rgb(240,164,27)" rx="2" ry="2" />
<text  x="849.33" y="62.5" ></text>
</g>
<g >
<title>node::DefineConstants (1 samples, 0.20%)</title><rect x="868.0" y="84" width="2.4" height="15.0" fill="rgb(236,203,27)" rx="2" ry="2" />
<text  x="870.96" y="94.5" ></text>
</g>
<g >
<title>node (5 samples, 1.02%)</title><rect x="300.8" y="116" width="12.0" height="15.0" fill="rgb(222,70,25)" rx="2" ry="2" />
<text  x="303.79" y="126.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="166.2" y="68" width="2.4" height="15.0" fill="rgb(217,150,16)" rx="2" ry="2" />
<text  x="169.21" y="78.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (1 samples, 0.20%)</title><rect x="1178.0" y="116" width="2.4" height="15.0" fill="rgb(236,206,47)" rx="2" ry="2" />
<text  x="1180.98" y="126.5" ></text>
</g>
<g >
<title>node::Buffer::HasInstance (1 samples, 0.20%)</title><rect x="817.5" y="52" width="2.4" height="15.0" fill="rgb(232,181,5)" rx="2" ry="2" />
<text  x="820.49" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="82.1" y="68" width="2.4" height="15.0" fill="rgb(240,107,39)" rx="2" ry="2" />
<text  x="85.10" y="78.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (2 samples, 0.41%)</title><rect x="836.7" y="52" width="4.8" height="15.0" fill="rgb(222,111,21)" rx="2" ry="2" />
<text  x="839.72" y="62.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.20%)</title><rect x="827.1" y="52" width="2.4" height="15.0" fill="rgb(221,132,35)" rx="2" ry="2" />
<text  x="830.11" y="62.5" ></text>
</g>
<g >
<title>node::BackgroundRunner (17 samples, 3.46%)</title><rect x="776.6" y="52" width="40.9" height="15.0" fill="rgb(247,118,13)" rx="2" ry="2" />
<text  x="779.64" y="62.5" >nod..</text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="89.3" y="68" width="2.4" height="15.0" fill="rgb(248,140,0)" rx="2" ry="2" />
<text  x="92.31" y="78.5" ></text>
</g>
<g >
<title>node::BackgroundRunner (1 samples, 0.20%)</title><rect x="1173.2" y="68" width="2.4" height="15.0" fill="rgb(233,59,44)" rx="2" ry="2" />
<text  x="1176.18" y="78.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.20%)</title><rect x="819.9" y="52" width="2.4" height="15.0" fill="rgb(231,103,48)" rx="2" ry="2" />
<text  x="822.90" y="62.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.41%)</title><rect x="829.5" y="52" width="4.8" height="15.0" fill="rgb(247,33,51)" rx="2" ry="2" />
<text  x="832.51" y="62.5" ></text>
</g>
<g >
<title>_start (5 samples, 1.02%)</title><rect x="853.5" y="100" width="12.1" height="15.0" fill="rgb(250,28,28)" rx="2" ry="2" />
<text  x="856.54" y="110.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="841.5" y="84" width="2.4" height="15.0" fill="rgb(221,120,13)" rx="2" ry="2" />
<text  x="844.53" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="293.6" y="68" width="2.4" height="15.0" fill="rgb(207,122,18)" rx="2" ry="2" />
<text  x="296.58" y="78.5" ></text>
</g>
<g >
<title>BytecodeHandler:CreateRegExpLiteral (2 samples, 0.41%)</title><rect x="70.1" y="52" width="4.8" height="15.0" fill="rgb(228,102,31)" rx="2" ry="2" />
<text  x="73.08" y="62.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (2 samples, 0.41%)</title><rect x="288.8" y="100" width="4.8" height="15.0" fill="rgb(230,96,27)" rx="2" ry="2" />
<text  x="291.78" y="110.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (2 samples, 0.41%)</title><rect x="836.7" y="100" width="4.8" height="15.0" fill="rgb(239,179,35)" rx="2" ry="2" />
<text  x="839.72" y="110.5" ></text>
</g>
<g >
<title>BytecodeHandler:Mov (1 samples, 0.20%)</title><rect x="135.0" y="52" width="2.4" height="15.0" fill="rgb(208,162,38)" rx="2" ry="2" />
<text  x="137.97" y="62.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::InitializeUV (1 samples, 0.20%)</title><rect x="774.2" y="52" width="2.4" height="15.0" fill="rgb(205,143,38)" rx="2" ry="2" />
<text  x="777.24" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="1173.2" y="100" width="2.4" height="15.0" fill="rgb(248,193,51)" rx="2" ry="2" />
<text  x="1176.18" y="110.5" ></text>
</g>
<g >
<title>node::Start (3 samples, 0.61%)</title><rect x="887.2" y="100" width="7.2" height="15.0" fill="rgb(217,176,23)" rx="2" ry="2" />
<text  x="890.19" y="110.5" ></text>
</g>
<g >
<title>node::Binding (2 samples, 0.41%)</title><rect x="877.6" y="84" width="4.8" height="15.0" fill="rgb(222,92,25)" rx="2" ry="2" />
<text  x="880.58" y="94.5" ></text>
</g>
<g >
<title>node::LoadEnvironment (3 samples, 0.61%)</title><rect x="887.2" y="84" width="7.2" height="15.0" fill="rgb(209,202,11)" rx="2" ry="2" />
<text  x="890.19" y="94.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (1 samples, 0.20%)</title><rect x="324.8" y="68" width="2.4" height="15.0" fill="rgb(235,96,27)" rx="2" ry="2" />
<text  x="327.83" y="78.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (1 samples, 0.20%)</title><rect x="819.9" y="68" width="2.4" height="15.0" fill="rgb(224,164,49)" rx="2" ry="2" />
<text  x="822.90" y="78.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (5 samples, 1.02%)</title><rect x="300.8" y="84" width="12.0" height="15.0" fill="rgb(224,118,54)" rx="2" ry="2" />
<text  x="303.79" y="94.5" ></text>
</g>
<g >
<title>v8::Object::Set (4 samples, 0.81%)</title><rect x="877.6" y="52" width="9.6" height="15.0" fill="rgb(216,99,9)" rx="2" ry="2" />
<text  x="880.58" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:LdaNamedProperty (12 samples, 2.44%)</title><rect x="103.7" y="52" width="28.9" height="15.0" fill="rgb(233,204,12)" rx="2" ry="2" />
<text  x="106.73" y="62.5" >By..</text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="24.4" y="68" width="2.4" height="15.0" fill="rgb(254,221,26)" rx="2" ry="2" />
<text  x="27.42" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="771.8" y="84" width="2.4" height="15.0" fill="rgb(223,68,27)" rx="2" ry="2" />
<text  x="774.83" y="94.5" ></text>
</g>
<g >
<title>BytecodeHandler:JumpIfToBooleanTrue (2 samples, 0.41%)</title><rect x="77.3" y="52" width="4.8" height="15.0" fill="rgb(242,51,3)" rx="2" ry="2" />
<text  x="80.29" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="322.4" y="132" width="2.4" height="15.0" fill="rgb(248,9,49)" rx="2" ry="2" />
<text  x="325.42" y="142.5" ></text>
</g>
<g >
<title>AddBoundMethod native intl.js:35 (1 samples, 0.20%)</title><rect x="841.5" y="68" width="2.4" height="15.0" fill="rgb(234,217,17)" rx="2" ry="2" />
<text  x="844.53" y="78.5" ></text>
</g>
<g >
<title>v8::base::OS::FPrint (4 samples, 0.81%)</title><rect x="1180.4" y="116" width="9.6" height="15.0" fill="rgb(228,130,24)" rx="2" ry="2" />
<text  x="1183.39" y="126.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="86.9" y="68" width="2.4" height="15.0" fill="rgb(249,45,11)" rx="2" ry="2" />
<text  x="89.90" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="870.4" y="100" width="2.4" height="15.0" fill="rgb(212,152,49)" rx="2" ry="2" />
<text  x="873.37" y="110.5" ></text>
</g>
<g >
<title>BytecodeHandler:StaNamedPropertyStrict (1 samples, 0.20%)</title><rect x="163.8" y="52" width="2.4" height="15.0" fill="rgb(226,61,25)" rx="2" ry="2" />
<text  x="166.81" y="62.5" ></text>
</g>
<g >
<title>uv_once (1 samples, 0.20%)</title><rect x="175.8" y="180" width="2.4" height="15.0" fill="rgb(239,22,48)" rx="2" ry="2" />
<text  x="178.82" y="190.5" ></text>
</g>
<g >
<title>int_err_set_item (1 samples, 0.20%)</title><rect x="175.8" y="84" width="2.4" height="15.0" fill="rgb(211,116,6)" rx="2" ry="2" />
<text  x="178.82" y="94.5" ></text>
</g>
<g >
<title>v8::Object::Get (2 samples, 0.41%)</title><rect x="872.8" y="52" width="4.8" height="15.0" fill="rgb(231,156,22)" rx="2" ry="2" />
<text  x="875.77" y="62.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="315.2" y="68" width="4.8" height="15.0" fill="rgb(217,221,30)" rx="2" ry="2" />
<text  x="318.21" y="78.5" ></text>
</g>
<g >
<title>node::Start (3 samples, 0.61%)</title><rect x="887.2" y="116" width="7.2" height="15.0" fill="rgb(213,211,24)" rx="2" ry="2" />
<text  x="890.19" y="126.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.20%)</title><rect x="822.3" y="52" width="2.4" height="15.0" fill="rgb(246,29,0)" rx="2" ry="2" />
<text  x="825.30" y="62.5" ></text>
</g>
<g >
<title>ERR_load_strings (1 samples, 0.20%)</title><rect x="264.7" y="84" width="2.4" height="15.0" fill="rgb(238,57,54)" rx="2" ry="2" />
<text  x="267.75" y="94.5" ></text>
</g>
<g >
<title>SSL_load_error_strings (1 samples, 0.20%)</title><rect x="175.8" y="132" width="2.4" height="15.0" fill="rgb(220,171,10)" rx="2" ry="2" />
<text  x="178.82" y="142.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="77.3" y="68" width="4.8" height="15.0" fill="rgb(225,165,42)" rx="2" ry="2" />
<text  x="80.29" y="78.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.20%)</title><rect x="1173.2" y="84" width="2.4" height="15.0" fill="rgb(211,191,52)" rx="2" ry="2" />
<text  x="1176.18" y="94.5" ></text>
</g>
<g >
<title>BytecodeHandler:StaNamedOwnProperty (1 samples, 0.20%)</title><rect x="161.4" y="52" width="2.4" height="15.0" fill="rgb(212,189,12)" rx="2" ry="2" />
<text  x="164.41" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="161.4" y="68" width="2.4" height="15.0" fill="rgb(238,0,47)" rx="2" ry="2" />
<text  x="164.41" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="67.7" y="68" width="2.4" height="15.0" fill="rgb(212,209,7)" rx="2" ry="2" />
<text  x="70.68" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="868.0" y="116" width="2.4" height="15.0" fill="rgb(233,227,45)" rx="2" ry="2" />
<text  x="870.96" y="126.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="848.7" y="84" width="2.4" height="15.0" fill="rgb(215,135,42)" rx="2" ry="2" />
<text  x="851.74" y="94.5" ></text>
</g>
<g >
<title>free (1 samples, 0.20%)</title><rect x="223.9" y="52" width="2.4" height="15.0" fill="rgb(210,62,42)" rx="2" ry="2" />
<text  x="226.89" y="62.5" ></text>
</g>
<g >
<title>strlen (1 samples, 0.20%)</title><rect x="843.9" y="52" width="2.4" height="15.0" fill="rgb(209,193,47)" rx="2" ry="2" />
<text  x="846.93" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:TestEqualStrict (2 samples, 0.41%)</title><rect x="171.0" y="52" width="4.8" height="15.0" fill="rgb(225,224,0)" rx="2" ry="2" />
<text  x="174.02" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:Star (1 samples, 0.20%)</title><rect x="168.6" y="52" width="2.4" height="15.0" fill="rgb(233,3,46)" rx="2" ry="2" />
<text  x="171.62" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:CallProperty (1 samples, 0.20%)</title><rect x="34.0" y="52" width="2.4" height="15.0" fill="rgb(214,78,21)" rx="2" ry="2" />
<text  x="37.03" y="62.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::DefineSystemConstants (1 samples, 0.20%)</title><rect x="868.0" y="68" width="2.4" height="15.0" fill="rgb(236,3,49)" rx="2" ry="2" />
<text  x="870.96" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="819.9" y="116" width="2.4" height="15.0" fill="rgb(209,173,2)" rx="2" ry="2" />
<text  x="822.90" y="126.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="1166.0" y="68" width="2.4" height="15.0" fill="rgb(211,60,33)" rx="2" ry="2" />
<text  x="1168.97" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="827.1" y="68" width="2.4" height="15.0" fill="rgb(247,96,15)" rx="2" ry="2" />
<text  x="830.11" y="78.5" ></text>
</g>
<g >
<title>node::Start (1 samples, 0.20%)</title><rect x="322.4" y="100" width="2.4" height="15.0" fill="rgb(213,108,30)" rx="2" ry="2" />
<text  x="325.42" y="110.5" ></text>
</g>
<g >
<title>icu_60::CollationFastLatin::compareUTF16 (3 samples, 0.61%)</title><rect x="245.5" y="52" width="7.2" height="15.0" fill="rgb(213,20,38)" rx="2" ry="2" />
<text  x="248.52" y="62.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (1 samples, 0.20%)</title><rect x="324.8" y="84" width="2.4" height="15.0" fill="rgb(218,180,7)" rx="2" ry="2" />
<text  x="327.83" y="94.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::EvalMachine (1 samples, 0.20%)</title><rect x="771.8" y="52" width="2.4" height="15.0" fill="rgb(217,46,24)" rx="2" ry="2" />
<text  x="774.83" y="62.5" ></text>
</g>
<g >
<title>node::Binding (1 samples, 0.20%)</title><rect x="868.0" y="100" width="2.4" height="15.0" fill="rgb(225,206,43)" rx="2" ry="2" />
<text  x="870.96" y="110.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (1 samples, 0.20%)</title><rect x="834.3" y="68" width="2.4" height="15.0" fill="rgb(215,141,16)" rx="2" ry="2" />
<text  x="837.32" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="1180.4" y="132" width="2.4" height="15.0" fill="rgb(242,79,20)" rx="2" ry="2" />
<text  x="1183.39" y="142.5" ></text>
</g>
<g >
<title>__kernel_clock_gettime (2 samples, 0.41%)</title><rect x="190.2" y="52" width="4.9" height="15.0" fill="rgb(216,137,30)" rx="2" ry="2" />
<text  x="193.24" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:CallRuntime (1 samples, 0.20%)</title><rect x="846.3" y="84" width="2.4" height="15.0" fill="rgb(252,182,19)" rx="2" ry="2" />
<text  x="849.33" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="183.0" y="84" width="2.4" height="15.0" fill="rgb(250,55,18)" rx="2" ry="2" />
<text  x="186.03" y="94.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="178.2" y="68" width="4.8" height="15.0" fill="rgb(239,19,7)" rx="2" ry="2" />
<text  x="181.23" y="78.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (4 samples, 0.81%)</title><rect x="1180.4" y="84" width="9.6" height="15.0" fill="rgb(223,136,33)" rx="2" ry="2" />
<text  x="1183.39" y="94.5" ></text>
</g>
<g >
<title>node::Start (1 samples, 0.20%)</title><rect x="322.4" y="84" width="2.4" height="15.0" fill="rgb(221,206,42)" rx="2" ry="2" />
<text  x="325.42" y="94.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.20%)</title><rect x="274.4" y="84" width="2.4" height="15.0" fill="rgb(239,97,22)" rx="2" ry="2" />
<text  x="277.36" y="94.5" ></text>
</g>
<g >
<title>malloc (11 samples, 2.24%)</title><rect x="267.1" y="52" width="26.5" height="15.0" fill="rgb(210,36,1)" rx="2" ry="2" />
<text  x="270.15" y="62.5" >m..</text>
</g>
<g >
<title>_IO_fwrite (1 samples, 0.20%)</title><rect x="187.8" y="84" width="2.4" height="15.0" fill="rgb(219,20,2)" rx="2" ry="2" />
<text  x="190.84" y="94.5" ></text>
</g>
<g >
<title>node::Start (3 samples, 0.61%)</title><rect x="1182.8" y="164" width="7.2" height="15.0" fill="rgb(227,191,20)" rx="2" ry="2" />
<text  x="1185.79" y="174.5" ></text>
</g>
<g >
<title>BytecodeHandler:LdaCurrentContextSlot (1 samples, 0.20%)</title><rect x="86.9" y="52" width="2.4" height="15.0" fill="rgb(240,41,33)" rx="2" ry="2" />
<text  x="89.90" y="62.5" ></text>
</g>
<g >
<title>_start (1 samples, 0.20%)</title><rect x="187.8" y="148" width="2.4" height="15.0" fill="rgb(218,228,2)" rx="2" ry="2" />
<text  x="190.84" y="158.5" ></text>
</g>
<g >
<title>node::Start (1 samples, 0.20%)</title><rect x="865.6" y="100" width="2.4" height="15.0" fill="rgb(214,32,21)" rx="2" ry="2" />
<text  x="868.56" y="110.5" ></text>
</g>
<g >
<title>node (3 samples, 0.61%)</title><rect x="887.2" y="148" width="7.2" height="15.0" fill="rgb(252,40,19)" rx="2" ry="2" />
<text  x="890.19" y="158.5" ></text>
</g>
<g >
<title>vsnprintf (2 samples, 0.41%)</title><rect x="1175.6" y="68" width="4.8" height="15.0" fill="rgb(244,115,14)" rx="2" ry="2" />
<text  x="1178.58" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="296.0" y="68" width="2.4" height="15.0" fill="rgb(236,200,15)" rx="2" ry="2" />
<text  x="298.99" y="78.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.61%)</title><rect x="887.2" y="132" width="7.2" height="15.0" fill="rgb(241,154,13)" rx="2" ry="2" />
<text  x="890.19" y="142.5" ></text>
</g>
<g >
<title>compare native intl.js:619 (1 samples, 0.20%)</title><rect x="223.9" y="68" width="2.4" height="15.0" fill="rgb(218,146,15)" rx="2" ry="2" />
<text  x="226.89" y="78.5" ></text>
</g>
<g >
<title>node::Binding (1 samples, 0.20%)</title><rect x="851.1" y="100" width="2.4" height="15.0" fill="rgb(245,126,29)" rx="2" ry="2" />
<text  x="854.14" y="110.5" ></text>
</g>
<g >
<title>compare native intl.js:619 (4 samples, 0.81%)</title><rect x="255.1" y="68" width="9.6" height="15.0" fill="rgb(229,55,53)" rx="2" ry="2" />
<text  x="258.13" y="78.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (113 samples, 23.01%)</title><rect x="894.4" y="84" width="271.6" height="15.0" fill="rgb(236,35,39)" rx="2" ry="2" />
<text  x="897.40" y="94.5" >node::(anonymous namespace)::Context..</text>
</g>
<g >
<title>node (5 samples, 1.02%)</title><rect x="91.7" y="68" width="12.0" height="15.0" fill="rgb(248,192,24)" rx="2" ry="2" />
<text  x="94.71" y="78.5" ></text>
</g>
<g >
<title>node (113 samples, 23.01%)</title><rect x="894.4" y="100" width="271.6" height="15.0" fill="rgb(209,4,39)" rx="2" ry="2" />
<text  x="897.40" y="110.5" >node</text>
</g>
<g >
<title>v8::Object::Set (2 samples, 0.41%)</title><rect x="882.4" y="68" width="4.8" height="15.0" fill="rgb(212,16,40)" rx="2" ry="2" />
<text  x="885.38" y="78.5" ></text>
</g>
<g >
<title>node (5 samples, 1.02%)</title><rect x="853.5" y="116" width="12.1" height="15.0" fill="rgb(231,129,47)" rx="2" ry="2" />
<text  x="856.54" y="126.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.20%)</title><rect x="320.0" y="84" width="2.4" height="15.0" fill="rgb(220,205,54)" rx="2" ry="2" />
<text  x="323.02" y="94.5" ></text>
</g>
<g >
<title>BytecodeHandler:JumpIfToBooleanFalse (1 samples, 0.20%)</title><rect x="74.9" y="52" width="2.4" height="15.0" fill="rgb(208,50,11)" rx="2" ry="2" />
<text  x="77.89" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="135.0" y="68" width="2.4" height="15.0" fill="rgb(235,16,37)" rx="2" ry="2" />
<text  x="137.97" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="1175.6" y="116" width="2.4" height="15.0" fill="rgb(205,88,25)" rx="2" ry="2" />
<text  x="1178.58" y="126.5" ></text>
</g>
<g >
<title>v8::base::TimeTicks::HighResolutionNow (2 samples, 0.41%)</title><rect x="190.2" y="68" width="4.9" height="15.0" fill="rgb(213,125,21)" rx="2" ry="2" />
<text  x="193.24" y="78.5" ></text>
</g>
<g >
<title>BytecodeHandler:CallRuntime (1 samples, 0.20%)</title><rect x="276.8" y="84" width="2.4" height="15.0" fill="rgb(225,226,0)" rx="2" ry="2" />
<text  x="279.76" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="851.1" y="116" width="2.4" height="15.0" fill="rgb(206,18,23)" rx="2" ry="2" />
<text  x="854.14" y="126.5" ></text>
</g>
<g >
<title>memcmp (7 samples, 1.43%)</title><rect x="296.0" y="52" width="16.8" height="15.0" fill="rgb(218,145,7)" rx="2" ry="2" />
<text  x="298.99" y="62.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="882.4" y="116" width="4.8" height="15.0" fill="rgb(210,103,17)" rx="2" ry="2" />
<text  x="885.38" y="126.5" ></text>
</g>
<g >
<title>v8::base::CallOnceImpl (1 samples, 0.20%)</title><rect x="1170.8" y="52" width="2.4" height="15.0" fill="rgb(207,85,31)" rx="2" ry="2" />
<text  x="1173.77" y="62.5" ></text>
</g>
<g >
<title>int_err_set_item (1 samples, 0.20%)</title><rect x="264.7" y="68" width="2.4" height="15.0" fill="rgb(214,156,28)" rx="2" ry="2" />
<text  x="267.75" y="78.5" ></text>
</g>
<g >
<title>uv_once (1 samples, 0.20%)</title><rect x="264.7" y="180" width="2.4" height="15.0" fill="rgb(253,154,22)" rx="2" ry="2" />
<text  x="267.75" y="190.5" ></text>
</g>
<g >
<title>v8::IsolateNewImpl (1 samples, 0.20%)</title><rect x="322.4" y="68" width="2.4" height="15.0" fill="rgb(222,101,34)" rx="2" ry="2" />
<text  x="325.42" y="78.5" ></text>
</g>
<g >
<title>node::InternalModuleStat (1 samples, 0.20%)</title><rect x="848.7" y="68" width="2.4" height="15.0" fill="rgb(229,19,44)" rx="2" ry="2" />
<text  x="851.74" y="78.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (1 samples, 0.20%)</title><rect x="834.3" y="100" width="2.4" height="15.0" fill="rgb(223,184,14)" rx="2" ry="2" />
<text  x="837.32" y="110.5" ></text>
</g>
<g >
<title>node::DefineJavaScript (2 samples, 0.41%)</title><rect x="877.6" y="68" width="4.8" height="15.0" fill="rgb(225,113,13)" rx="2" ry="2" />
<text  x="880.58" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="274.4" y="100" width="2.4" height="15.0" fill="rgb(252,86,46)" rx="2" ry="2" />
<text  x="277.36" y="110.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (113 samples, 23.01%)</title><rect x="894.4" y="68" width="271.6" height="15.0" fill="rgb(252,46,48)" rx="2" ry="2" />
<text  x="897.40" y="78.5" >v8::ScriptCompiler::CompileUnboundSc..</text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="171.0" y="68" width="4.8" height="15.0" fill="rgb(223,173,32)" rx="2" ry="2" />
<text  x="174.02" y="78.5" ></text>
</g>
<g >
<title>node::BackgroundRunner (1 samples, 0.20%)</title><rect x="320.0" y="68" width="2.4" height="15.0" fill="rgb(222,25,9)" rx="2" ry="2" />
<text  x="323.02" y="78.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (1 samples, 0.20%)</title><rect x="1178.0" y="100" width="2.4" height="15.0" fill="rgb(248,138,34)" rx="2" ry="2" />
<text  x="1180.98" y="110.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.20%)</title><rect x="185.4" y="52" width="2.4" height="15.0" fill="rgb(215,65,20)" rx="2" ry="2" />
<text  x="188.44" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="1178.0" y="148" width="2.4" height="15.0" fill="rgb(217,22,53)" rx="2" ry="2" />
<text  x="1180.98" y="158.5" ></text>
</g>
<g >
<title>node::Start (1 samples, 0.20%)</title><rect x="187.8" y="132" width="2.4" height="15.0" fill="rgb(246,156,18)" rx="2" ry="2" />
<text  x="190.84" y="142.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="872.8" y="84" width="2.4" height="15.0" fill="rgb(211,25,36)" rx="2" ry="2" />
<text  x="875.77" y="94.5" ></text>
</g>
<g >
<title>v8::UnboundScript::BindToCurrentContext (1 samples, 0.20%)</title><rect x="1168.4" y="52" width="2.4" height="15.0" fill="rgb(224,3,7)" rx="2" ry="2" />
<text  x="1171.37" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:LdaKeyedProperty (1 samples, 0.20%)</title><rect x="183.0" y="68" width="2.4" height="15.0" fill="rgb(242,78,37)" rx="2" ry="2" />
<text  x="186.03" y="78.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::RunInThisContext (1 samples, 0.20%)</title><rect x="771.8" y="68" width="2.4" height="15.0" fill="rgb(230,167,23)" rx="2" ry="2" />
<text  x="774.83" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="223.9" y="84" width="2.4" height="15.0" fill="rgb(230,153,49)" rx="2" ry="2" />
<text  x="226.89" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="817.5" y="100" width="2.4" height="15.0" fill="rgb(246,116,39)" rx="2" ry="2" />
<text  x="820.49" y="110.5" ></text>
</g>
<g >
<title>node::Binding (1 samples, 0.20%)</title><rect x="264.7" y="212" width="2.4" height="15.0" fill="rgb(218,117,52)" rx="2" ry="2" />
<text  x="267.75" y="222.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="70.1" y="68" width="4.8" height="15.0" fill="rgb(221,54,14)" rx="2" ry="2" />
<text  x="73.08" y="78.5" ></text>
</g>
<g >
<title>CRYPTO_malloc (1 samples, 0.20%)</title><rect x="175.8" y="52" width="2.4" height="15.0" fill="rgb(211,115,37)" rx="2" ry="2" />
<text  x="178.82" y="62.5" ></text>
</g>
<g >
<title>node (5 samples, 1.02%)</title><rect x="12.4" y="68" width="12.0" height="15.0" fill="rgb(233,179,10)" rx="2" ry="2" />
<text  x="15.40" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="298.4" y="100" width="2.4" height="15.0" fill="rgb(250,19,41)" rx="2" ry="2" />
<text  x="301.39" y="110.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="1170.8" y="68" width="2.4" height="15.0" fill="rgb(240,103,40)" rx="2" ry="2" />
<text  x="1173.77" y="78.5" ></text>
</g>
<g >
<title>v8::Object::Get (1 samples, 0.20%)</title><rect x="298.4" y="68" width="2.4" height="15.0" fill="rgb(216,200,6)" rx="2" ry="2" />
<text  x="301.39" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="175.8" y="228" width="2.4" height="15.0" fill="rgb(229,217,53)" rx="2" ry="2" />
<text  x="178.82" y="238.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="312.8" y="84" width="2.4" height="15.0" fill="rgb(252,221,25)" rx="2" ry="2" />
<text  x="315.81" y="94.5" ></text>
</g>
<g >
<title>node::Start (5 samples, 1.02%)</title><rect x="853.5" y="84" width="12.1" height="15.0" fill="rgb(239,1,13)" rx="2" ry="2" />
<text  x="856.54" y="94.5" ></text>
</g>
<g >
<title>node::Binding (1 samples, 0.20%)</title><rect x="175.8" y="212" width="2.4" height="15.0" fill="rgb(219,167,16)" rx="2" ry="2" />
<text  x="178.82" y="222.5" ></text>
</g>
<g >
<title>v8::base::OS::VSNPrintF (2 samples, 0.41%)</title><rect x="1175.6" y="84" width="4.8" height="15.0" fill="rgb(248,210,47)" rx="2" ry="2" />
<text  x="1178.58" y="94.5" ></text>
</g>
<g >
<title>v8::Script::Compile (3 samples, 0.61%)</title><rect x="887.2" y="68" width="7.2" height="15.0" fill="rgb(233,68,51)" rx="2" ry="2" />
<text  x="890.19" y="78.5" ></text>
</g>
<g >
<title>ERR_load_crypto_strings (1 samples, 0.20%)</title><rect x="175.8" y="116" width="2.4" height="15.0" fill="rgb(227,223,3)" rx="2" ry="2" />
<text  x="178.82" y="126.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="187.8" y="164" width="2.4" height="15.0" fill="rgb(252,102,23)" rx="2" ry="2" />
<text  x="190.84" y="174.5" ></text>
</g>
<g >
<title>A native intl.js:41 (1 samples, 0.20%)</title><rect x="10.0" y="52" width="2.4" height="15.0" fill="rgb(224,53,17)" rx="2" ry="2" />
<text  x="13.00" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:CallUndefinedReceiver (1 samples, 0.20%)</title><rect x="67.7" y="52" width="2.4" height="15.0" fill="rgb(221,126,54)" rx="2" ry="2" />
<text  x="70.68" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="264.7" y="228" width="2.4" height="15.0" fill="rgb(234,128,43)" rx="2" ry="2" />
<text  x="267.75" y="238.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1 samples, 0.20%)</title><rect x="175.8" y="164" width="2.4" height="15.0" fill="rgb(242,98,50)" rx="2" ry="2" />
<text  x="178.82" y="174.5" ></text>
</g>
<g >
<title>compare native intl.js:619 (3 samples, 0.61%)</title><rect x="279.2" y="84" width="7.2" height="15.0" fill="rgb(248,87,0)" rx="2" ry="2" />
<text  x="282.16" y="94.5" ></text>
</g>
<g >
<title>vfprintf (2 samples, 0.41%)</title><rect x="1175.6" y="52" width="4.8" height="15.0" fill="rgb(226,215,5)" rx="2" ry="2" />
<text  x="1178.58" y="62.5" ></text>
</g>
<g >
<title>v8::base::hash_value (1 samples, 0.20%)</title><rect x="1173.2" y="52" width="2.4" height="15.0" fill="rgb(217,74,51)" rx="2" ry="2" />
<text  x="1176.18" y="62.5" ></text>
</g>
<g >
<title>v8::IsolateNewImpl (1 samples, 0.20%)</title><rect x="187.8" y="100" width="2.4" height="15.0" fill="rgb(220,1,42)" rx="2" ry="2" />
<text  x="190.84" y="110.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (1 samples, 0.20%)</title><rect x="819.9" y="100" width="2.4" height="15.0" fill="rgb(232,160,1)" rx="2" ry="2" />
<text  x="822.90" y="110.5" ></text>
</g>
<g >
<title>__libc_open64 (1 samples, 0.20%)</title><rect x="195.1" y="52" width="2.4" height="15.0" fill="rgb(244,44,53)" rx="2" ry="2" />
<text  x="198.05" y="62.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (1 samples, 0.20%)</title><rect x="298.4" y="84" width="2.4" height="15.0" fill="rgb(233,16,16)" rx="2" ry="2" />
<text  x="301.39" y="94.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.20%)</title><rect x="834.3" y="52" width="2.4" height="15.0" fill="rgb(241,190,3)" rx="2" ry="2" />
<text  x="837.32" y="62.5" ></text>
</g>
<g >
<title>all (491 samples, 100%)</title><rect x="10.0" y="36" width="1180.0" height="15.0" fill="rgb(226,184,38)" rx="2" ry="2" />
<text  x="13.00" y="46.5" ></text>
</g>
<g >
<title>node::Start (3 samples, 0.61%)</title><rect x="1182.8" y="148" width="7.2" height="15.0" fill="rgb(222,102,21)" rx="2" ry="2" />
<text  x="1185.79" y="158.5" ></text>
</g>
<g >
<title>node::InitFs (2 samples, 0.41%)</title><rect x="882.4" y="84" width="4.8" height="15.0" fill="rgb(241,49,24)" rx="2" ry="2" />
<text  x="885.38" y="94.5" ></text>
</g>
<g >
<title>node::Start (5 samples, 1.02%)</title><rect x="853.5" y="68" width="12.1" height="15.0" fill="rgb(213,112,25)" rx="2" ry="2" />
<text  x="856.54" y="78.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="276.8" y="100" width="2.4" height="15.0" fill="rgb(243,126,17)" rx="2" ry="2" />
<text  x="279.76" y="110.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="1168.4" y="100" width="2.4" height="15.0" fill="rgb(219,205,26)" rx="2" ry="2" />
<text  x="1171.37" y="110.5" ></text>
</g>
<g >
<title>v8::Context::New (1 samples, 0.20%)</title><rect x="865.6" y="68" width="2.4" height="15.0" fill="rgb(254,108,17)" rx="2" ry="2" />
<text  x="868.56" y="78.5" ></text>
</g>
<g >
<title>v8::TryCatch::~TryCatch (1 samples, 0.20%)</title><rect x="1166.0" y="52" width="2.4" height="15.0" fill="rgb(218,39,27)" rx="2" ry="2" />
<text  x="1168.97" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="286.4" y="84" width="2.4" height="15.0" fill="rgb(218,123,2)" rx="2" ry="2" />
<text  x="289.37" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="195.1" y="116" width="2.4" height="15.0" fill="rgb(207,216,10)" rx="2" ry="2" />
<text  x="198.05" y="126.5" ></text>
</g>
<g >
<title>get /usr/src/app/node_modules/fast-levenshtein/levenshtein.js:27 (8 samples, 1.63%)</title><rect x="226.3" y="52" width="19.2" height="15.0" fill="rgb(208,217,41)" rx="2" ry="2" />
<text  x="229.29" y="62.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (1 samples, 0.20%)</title><rect x="819.9" y="84" width="2.4" height="15.0" fill="rgb(222,13,10)" rx="2" ry="2" />
<text  x="822.90" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="84.5" y="68" width="2.4" height="15.0" fill="rgb(231,201,24)" rx="2" ry="2" />
<text  x="87.50" y="78.5" ></text>
</g>
<g >
<title>node::InitConfig (1 samples, 0.20%)</title><rect x="870.4" y="68" width="2.4" height="15.0" fill="rgb(242,181,14)" rx="2" ry="2" />
<text  x="873.37" y="78.5" ></text>
</g>
<g >
<title>AddBoundMethod native intl.js:35 (5 samples, 1.02%)</title><rect x="12.4" y="52" width="12.0" height="15.0" fill="rgb(251,33,24)" rx="2" ry="2" />
<text  x="15.40" y="62.5" ></text>
</g>
<g >
<title>node::Start (1 samples, 0.20%)</title><rect x="865.6" y="84" width="2.4" height="15.0" fill="rgb(223,68,42)" rx="2" ry="2" />
<text  x="868.56" y="94.5" ></text>
</g>
<g >
<title>node (13 samples, 2.65%)</title><rect x="36.4" y="68" width="31.3" height="15.0" fill="rgb(226,54,34)" rx="2" ry="2" />
<text  x="39.44" y="78.5" >node</text>
</g>
<g >
<title>memchr (1 samples, 0.20%)</title><rect x="293.6" y="52" width="2.4" height="15.0" fill="rgb(206,157,46)" rx="2" ry="2" />
<text  x="296.58" y="62.5" ></text>
</g>
<g >
<title>v8::base::OS::VSNPrintF (1 samples, 0.20%)</title><rect x="185.4" y="84" width="2.4" height="15.0" fill="rgb(208,45,0)" rx="2" ry="2" />
<text  x="188.44" y="94.5" ></text>
</g>
<g >
<title>BytecodeHandler:JumpIfTrue (1 samples, 0.20%)</title><rect x="82.1" y="52" width="2.4" height="15.0" fill="rgb(230,121,10)" rx="2" ry="2" />
<text  x="85.10" y="62.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="324.8" y="116" width="2.4" height="15.0" fill="rgb(229,167,52)" rx="2" ry="2" />
<text  x="327.83" y="126.5" ></text>
</g>
<g >
<title>node (3 samples, 0.61%)</title><rect x="245.5" y="100" width="7.2" height="15.0" fill="rgb(244,202,2)" rx="2" ry="2" />
<text  x="248.52" y="110.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="185.4" y="164" width="2.4" height="15.0" fill="rgb(223,173,50)" rx="2" ry="2" />
<text  x="188.44" y="174.5" ></text>
</g>
<g >
<title>uv_fs_open (1 samples, 0.20%)</title><rect x="195.1" y="84" width="2.4" height="15.0" fill="rgb(225,24,25)" rx="2" ry="2" />
<text  x="198.05" y="94.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="865.6" y="132" width="2.4" height="15.0" fill="rgb(205,125,27)" rx="2" ry="2" />
<text  x="868.56" y="142.5" ></text>
</g>
<g >
<title>AddBoundMethod native intl.js:35 (1 samples, 0.20%)</title><rect x="1175.6" y="100" width="2.4" height="15.0" fill="rgb(223,2,47)" rx="2" ry="2" />
<text  x="1178.58" y="110.5" ></text>
</g>
<g >
<title>uv (1 samples, 0.20%)</title><rect x="848.7" y="52" width="2.4" height="15.0" fill="rgb(208,85,23)" rx="2" ry="2" />
<text  x="851.74" y="62.5" ></text>
</g>
<g >
<title>node (11 samples, 2.24%)</title><rect x="197.5" y="68" width="26.4" height="15.0" fill="rgb(232,212,18)" rx="2" ry="2" />
<text  x="200.45" y="78.5" >n..</text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::EvalMachine (1 samples, 0.20%)</title><rect x="1168.4" y="68" width="2.4" height="15.0" fill="rgb(215,175,3)" rx="2" ry="2" />
<text  x="1171.37" y="78.5" ></text>
</g>
<g >
<title>compare native intl.js:619 (11 samples, 2.24%)</title><rect x="197.5" y="52" width="26.4" height="15.0" fill="rgb(249,94,21)" rx="2" ry="2" />
<text  x="200.45" y="62.5" >c..</text>
</g>
<g >
<title>node::crypto::InitCrypto (1 samples, 0.20%)</title><rect x="175.8" y="196" width="2.4" height="15.0" fill="rgb(238,62,33)" rx="2" ry="2" />
<text  x="178.82" y="206.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (1 samples, 0.20%)</title><rect x="1178.0" y="132" width="2.4" height="15.0" fill="rgb(210,55,8)" rx="2" ry="2" />
<text  x="1180.98" y="142.5" ></text>
</g>
<g >
<title>AddBoundMethod native intl.js:35 (1 samples, 0.20%)</title><rect x="312.8" y="68" width="2.4" height="15.0" fill="rgb(215,43,41)" rx="2" ry="2" />
<text  x="315.81" y="78.5" ></text>
</g>
<g >
<title>node::Binding (1 samples, 0.20%)</title><rect x="774.2" y="68" width="2.4" height="15.0" fill="rgb(244,222,10)" rx="2" ry="2" />
<text  x="777.24" y="78.5" ></text>
</g>
<g >
<title>_start (3 samples, 0.61%)</title><rect x="1182.8" y="180" width="7.2" height="15.0" fill="rgb(229,4,27)" rx="2" ry="2" />
<text  x="1185.79" y="190.5" ></text>
</g>
<g >
<title>node (2 samples, 0.41%)</title><rect x="877.6" y="100" width="4.8" height="15.0" fill="rgb(221,18,52)" rx="2" ry="2" />
<text  x="880.58" y="110.5" ></text>
</g>
<g >
<title>operator delete[]@plt (1 samples, 0.20%)</title><rect x="824.7" y="52" width="2.4" height="15.0" fill="rgb(229,2,39)" rx="2" ry="2" />
<text  x="827.70" y="62.5" ></text>
</g>
<g >
<title>v8::FunctionTemplate::GetFunction (1 samples, 0.20%)</title><rect x="851.1" y="68" width="2.4" height="15.0" fill="rgb(242,38,51)" rx="2" ry="2" />
<text  x="854.14" y="78.5" ></text>
</g>
<g >
<title>memcpy (6 samples, 1.22%)</title><rect x="312.8" y="52" width="14.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="315.81" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:CallProperty1 (3 samples, 0.61%)</title><rect x="26.8" y="52" width="7.2" height="15.0" fill="rgb(254,84,53)" rx="2" ry="2" />
<text  x="29.82" y="62.5" ></text>
</g>
<g >
<title>BytecodeHandler:StackCheck (1 samples, 0.20%)</title><rect x="166.2" y="52" width="2.4" height="15.0" fill="rgb(211,163,3)" rx="2" ry="2" />
<text  x="169.21" y="62.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundScript (2 samples, 0.41%)</title><rect x="836.7" y="84" width="4.8" height="15.0" fill="rgb(208,6,10)" rx="2" ry="2" />
<text  x="839.72" y="94.5" ></text>
</g>
<g >
<title>BytecodeHandler:StaDataPropertyInLiteral (2 samples, 0.41%)</title><rect x="137.4" y="52" width="4.8" height="15.0" fill="rgb(242,148,28)" rx="2" ry="2" />
<text  x="140.37" y="62.5" ></text>
</g>
<g >
<title>v8::ScriptCompiler::CompileUnboundInternal (116 samples, 23.63%)</title><rect x="887.2" y="52" width="278.8" height="15.0" fill="rgb(214,92,16)" rx="2" ry="2" />
<text  x="890.19" y="62.5" >v8::ScriptCompiler::CompileUnboundInt..</text>
</g>
<g >
<title>write (4 samples, 0.81%)</title><rect x="1180.4" y="52" width="9.6" height="15.0" fill="rgb(229,135,2)" rx="2" ry="2" />
<text  x="1183.39" y="62.5" ></text>
</g>
<g >
<title>ERR_load_crypto_strings (1 samples, 0.20%)</title><rect x="264.7" y="116" width="2.4" height="15.0" fill="rgb(205,213,21)" rx="2" ry="2" />
<text  x="267.75" y="126.5" ></text>
</g>
<g >
<title>node (1 samples, 0.20%)</title><rect x="834.3" y="116" width="2.4" height="15.0" fill="rgb(249,20,10)" rx="2" ry="2" />
<text  x="837.32" y="126.5" ></text>
</g>
<g >
<title>BytecodeHandler:StaKeyedPropertySloppy (1 samples, 0.20%)</title><rect x="142.2" y="52" width="2.4" height="15.0" fill="rgb(213,82,13)" rx="2" ry="2" />
<text  x="145.18" y="62.5" ></text>
</g>
<g >
<title>ERR_load_strings (1 samples, 0.20%)</title><rect x="175.8" y="100" width="2.4" height="15.0" fill="rgb(246,148,8)" rx="2" ry="2" />
<text  x="178.82" y="110.5" ></text>
</g>
<g >
<title>node (4 samples, 0.81%)</title><rect x="255.1" y="84" width="9.6" height="15.0" fill="rgb(238,182,29)" rx="2" ry="2" />
<text  x="258.13" y="94.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ContextifyScript::New (1 samples, 0.20%)</title><rect x="324.8" y="100" width="2.4" height="15.0" fill="rgb(246,123,36)" rx="2" ry="2" />
<text  x="327.83" y="110.5" ></text>
</g>
<g >
<title>KeyedLoadIC:A keyed load IC from the snapshot (1 samples, 0.20%)</title><rect x="183.0" y="52" width="2.4" height="15.0" fill="rgb(237,109,1)" rx="2" ry="2" />
<text  x="186.03" y="62.5" ></text>
</g>
<g >
<title>node::crypto::InitCryptoOnce (1 samples, 0.20%)</title><rect x="264.7" y="148" width="2.4" height="15.0" fill="rgb(212,68,0)" rx="2" ry="2" />
<text  x="267.75" y="158.5" ></text>
</g>
<g >
<title>BytecodeHandler:CallRuntime (13 samples, 2.65%)</title><rect x="36.4" y="52" width="31.3" height="15.0" fill="rgb(236,33,49)" rx="2" ry="2" />
<text  x="39.44" y="62.5" >By..</text>
</g>
<g >
<title>node::crypto::InitCryptoOnce (1 samples, 0.20%)</title><rect x="175.8" y="148" width="2.4" height="15.0" fill="rgb(240,6,24)" rx="2" ry="2" />
<text  x="178.82" y="158.5" ></text>
</g>
</g>
</svg>
